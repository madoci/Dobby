
/* HEADER */
typedef struct {
  unsigned char e_ident[EI_NIDENT];
  Elf32_Half e_type;                        CHANGE (APRES)
  Elf32_Half e_machine;
  Elf32_Word e_version;
  Elf32_Addr e_entry;
  Elf32_Off  e_phoff;
  Elf32_Off  e_shoff;                       //CHANGE PEUT-ETRE
  Elf32_Word e_flags;
  Elf32_Half e_ehsize;
  Elf32_Half e_phentsize;
  Elf32_Half e_phnum;
  Elf32_Half e_shentsize;
  Elf32_Half e_shnum;                    +  CHANGE
  Elf32_Half e_shstrndx;                 +  CHANGE
} Elf32_Ehdr;

/* SECTION TABLE */
typedef struct {
  Elf32_Word sh_name;
  Elf32_Word sh_type;
  Elf32_Word sh_flags;
  Elf32_Addr sh_addr;                       CHANGE PEUT-ETRE (APRES)
  Elf32_Off  sh_offset;                  +  CHANGE
  Elf32_Word sh_size;
  Elf32_Word sh_link;                    +  CHANGE POUR SYM_TAB -> index de la string table des symboles   (et pour SHT_HASH ?)
  Elf32_Word sh_info;                    +  ??? (pour la SYM_TAB -> index d'elle mÃªme ?)
  Elf32_Word sh_addralign;
  Elf32_Word sh_entsize;
} Elf32_Shdr;

/* SYMBOLS */
typedef struct {
  Elf32_Word st_name;
  Elf32_Addr st_value;                      CHANGE (APRES)
  Elf32_Word st_size;
  unsigned char st_info;
  unsigned char st_other;
  Elf32_Half st_shndx;                      CHANGE (index de la section)
} Elf32_Sym;


/* SHF_ARM_NOREAD       = 0x20000000 -> SECTION FLAGS
 * 
 * 
 * 
 * 
 */
